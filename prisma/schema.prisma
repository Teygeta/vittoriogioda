generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("POSTGRES_PRISMA_URL")
}

model Post {
  id String @id @default(uuid())

  title   String
  content String?

  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  deletedAt DateTime?

  published Boolean @default(false)

  authorId String
  author   User   @relation(fields: [authorId], references: [id])

  // add events for tracking changes
}

model Account {
  id                 String  @id @default(cuid())

  userId             String

  type               String
  provider           String
  providerAccountId  String

  refresh_token      String?
  access_token       String?
  expires_at         Int?
  token_type         String?
  scope              String?
  id_token           String?
  session_state      String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id String @id @default(cuid())

  sessionToken String @unique

  userId String

  expires DateTime

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user User @relation(fields: [userId], references: [id])
}

enum UserRole {
  ADMIN
  USER
  AUTHOR
  MODERATOR
}

model User {
  id String @id @default(cuid())

  name String?

  email         String?   @unique
  emailVerified DateTime?

  image String?
  role  UserRole @default(USER)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  accounts Account[]
  posts    Post[]
  sessions Session[]
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}
