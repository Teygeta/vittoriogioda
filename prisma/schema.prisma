generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("POSTGRES_PRISMA_URL")
}

model Post {
  id String @id @default(uuid())

  title   String
  content String?

  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  deletedAt DateTime?

  published Boolean @default(false)

  authorId String
  author   User   @relation(fields: [authorId], references: [id])

  // add events for tracking changes
}

model Account {
  id String @id @default(cuid())

  userId String

  providerType      String
  providerId        String
  providerAccountId String

  refreshToken       String?
  accessToken        String?
  accessTokenExpires DateTime?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user User @relation(fields: [userId], references: [id])

  @@unique([providerId, providerAccountId])
}

model Session {
  id String @id @default(cuid())

  userId String

  expires DateTime

  sessionToken String @unique
  accessToken  String @unique

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user User @relation(fields: [userId], references: [id])
}

// user role type
enum UserRole {
  ADMIN
  USER
  AUTHOR
  MODERATOR
}

model User {
  id String @id @default(cuid())

  name String?

  email         String?   @unique
  emailVerified DateTime?

  image String?
  role  UserRole @default(USER)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  accounts Account[]
  posts    Post[]
  sessions Session[]
}

model VerificationRequest {
  id String @id @default(cuid())

  identifier String
  token      String   @unique
  expires    DateTime

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@unique([identifier, token])
}
